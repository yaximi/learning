/**
 * 1.在ES6之前，JavaScript没有块级作用域（一对花括号{}即为一个块级作用域），只有全局作用域和函数作用域
 * 2.变量提升即将变量声明提升到它所在作用域的最开始的部分（注意：只会提升变量名的声明，而不会提升变量的赋值初始化）
 * 3.同一个变量只会声明一次，其他的会被忽略掉
 */

(function () {
    console.log(a); // undefined
    var a = 10;
    console.log(a); // 10
})();

// var a = 10; 存在变量提升，即将变量声明提升到它所在作用域的最开始的部分（注意：只会提升变量名的声明，而不会提升变量的赋值初始化）
// 所以上面的代码相当于：
(function () {
    var a;
    console.log(a); // undefined
    a = 10;
    console.log(a); // 10
})();

/**********************************************************************************************************************/

(function () {
    console.log(a); // undefined
    var a = 10;
    console.log(a); // 10
    var a = 100;
    console.log(a); // 100
})();

// var a = 10; 存在变量提升，即将变量声明提升到它所在作用域的最开始的部分（注意：只会提升变量名的声明，而不会提升变量的赋值初始化）
// 所以上面的代码相当于：
(function () {
    var a;
    console.log(a); // undefined
    a = 10;
    console.log(a); // 10
    var a = 100;
    console.log(a); // 100
})();

// var a = 100; 同样存在变量提升，即将变量声明提升到它所在作用域的最开始的部分（注意：只会提升变量名的声明，而不会提升变量的赋值初始化）
// 但 var a = 10; 在变量提升之后，已经声明了变量a，因此 var a = 100; 中变量a的声明将被忽略
// 所以上面的代码又相当于：
(function () {
    var a;
    console.log(a); // undefined
    a = 10;
    console.log(a); // 10
    a = 100;
    console.log(a); // 100
})();
